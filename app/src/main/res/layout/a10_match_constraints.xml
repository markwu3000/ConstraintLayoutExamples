<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:ignore="RtlHardcoded">

    <!-- From the Google documentation: 
    "Important: MATCH_PARENT is not recommended for widgets contained in a ConstraintLayout. 
    Similar behavior can be defined by using MATCH_CONSTRAINT with the corresponding left/right or 
    top/bottom constraints being set to "parent" -->

    <TextView
        android:id="@+id/regular_big_text"
        style="@style/big_text"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:background="@color/pink800"
        android:text="@string/text1"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <!-- ************************************************************************************** -->

    <!-- Use 0dp as "match constraint" to fill the remaining space.  There is no actual text value for match_constraint. -->
    <TextView
        android:id="@+id/big_text_with_small_max"
        style="@style/big_text"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_marginTop="@dimen/top_margin"
        android:background="@color/green800"
        android:gravity="center"
        android:text="@string/text2"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/regular_big_text" />

    <!-- ************************************************************************************** -->

    <!-- 0dp (match constraint) respects margins and doesn't blow through them. -->
    <TextView
        android:id="@+id/text3"
        style="@style/big_text"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_marginStart="@dimen/small_left_margin"
        android:layout_marginLeft="@dimen/small_left_margin"
        android:layout_marginTop="@dimen/top_margin"
        android:background="@color/purple"
        android:text="@string/text3"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/big_text_with_small_max" />

    <!-- ************************************************************************************** -->

    <TextView
        android:id="@+id/name_text_view"
        style="@style/big_text"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:background="@color/blue800"
        android:text="@string/name"
        app:layout_constraintBottom_toBottomOf="@id/name_edit_text"
        app:layout_constraintStart_toStartOf="parent" />

    <!-- Use 0dp as "match constraint" to fill the remaining space. -->
    <EditText
        android:id="@+id/name_edit_text"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_marginTop="@dimen/top_margin"
        app:layout_constraintEnd_toStartOf="@id/search_button"
        app:layout_constraintStart_toEndOf="@id/name_text_view"
        app:layout_constraintTop_toBottomOf="@id/text3" />

    <ImageView
        android:id="@+id/search_button"
        android:layout_width="wrap_content"
        android:layout_height="0dp"
        android:src="@android:drawable/ic_search_category_default"
        app:layout_constraintBottom_toBottomOf="@id/name_text_view"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toTopOf="@id/name_edit_text" />

    <!-- ************************************************************************************** -->

    <ImageView
        android:id="@+id/left_star"
        android:layout_width="@dimen/star_size_small"
        android:layout_height="@dimen/star_size_small"
        android:layout_marginTop="@dimen/top_margin"
        android:background="@color/black"
        android:src="@android:drawable/star_on"
        android:tint="@color/yellow"
        app:layout_constraintEnd_toStartOf="@id/center_text"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/name_edit_text" />

    <!-- Match both horizontal and vertical constraints.  Top and Bottom are constrained to the star. -->
    <TextView
        android:id="@+id/center_text"
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:background="@color/orange"
        android:ellipsize="end"
        android:gravity="center"
        android:maxLines="1"
        android:text="@string/winner"
        app:layout_constraintBottom_toBottomOf="@id/left_star"
        app:layout_constraintEnd_toStartOf="@id/right_star"
        app:layout_constraintStart_toEndOf="@id/left_star"
        app:layout_constraintTop_toTopOf="@id/left_star" />

    <ImageView
        android:id="@+id/right_star"
        android:layout_width="@dimen/star_size_small"
        android:layout_height="@dimen/star_size_small"
        android:background="@color/black"
        android:src="@android:drawable/star_on"
        android:tint="@color/yellow"
        app:layout_constraintBottom_toBottomOf="@id/left_star"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toEndOf="@id/center_text" />

    <!-- ************************************************************************************** -->

    <!--
        ConstrainedWidth Example

        Variable length text view on the left.  Button (or other view) on the right.  If the text is short, the right view
        should be packed next to it.  If the text is long, the button should still be next to the next view and not
        get pushed off the screen.  To prevent getting pushed off the screen, set `app:layout_constrainedWidth="true"`
        on the textview.  This is new to ConstraintLayout 1.1 and replaces layout_constraintWidth_default.
        https://androidstudio.googleblog.com/2017/10/constraintlayout-110-beta-2.html

        Make the text really long (see button stays on screen.)
        remove app:layout_constrainedWidth="true" (see button gets pushed off screen.)
    -->

    <TextView
        android:id="@+id/constrained_width_text"
        style="@style/big_text"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="@dimen/top_margin"
        android:background="@color/yellow"
        android:ellipsize="end"
        android:maxLines="1"
        android:text="ABC"
        app:layout_constrainedWidth="true"
        app:layout_constraintHorizontal_chainStyle="packed"
        app:layout_constraintHorizontal_bias="0"
        app:layout_constraintEnd_toStartOf="@id/right_button"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/center_text" />

    <Button
        android:id="@+id/right_button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="button"
        app:layout_constraintBottom_toBottomOf="@id/constrained_width_text"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toEndOf="@id/constrained_width_text"
        app:layout_constraintTop_toTopOf="@id/constrained_width_text" />


</androidx.constraintlayout.widget.ConstraintLayout>